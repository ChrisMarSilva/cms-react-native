

  constructor(props) {
    super(props);
    this.state = {favoritecolor: "red"};
  }
  componentDidMount() {
    setTimeout(() => {
      this.setState({favoritecolor: "yellow"})
    }, 1000)
  }


// e.g add event listener 
componentDidMount() { 
	el.addEventListener() 
} 
 
// e.g remove event listener  
componentWillUnmount() { 
    el.removeEventListener() 
}



---------------------------------------------------------
---------------------------------------------------------

import React, { Component, useState, useEffect, useRef,  } from 'react'
import { StatusBar } from 'expo-status-bar'
import { StyleSheet, View, SafeAreaView, ScrollView, Text, Button, Vibration, Platform, Modal, TouchableOpacity, TouchableHighlight, Image, Alert, } from 'react-native'
import { LogBox } from 'react-native'
import Constants from 'expo-constants'

LogBox.ignoreLogs(['Warning: ...']) // Ignore log notification by message:
LogBox.ignoreAllLogs() // LogBox.ignoreAllLogs(true) // Ignore all log notifications:

//console.ignoredYellowBox = ['Warning: Each', 'Warning: Failed'];
//console.disableYellowBox = true;

export default function App() {

  const [count, setCount] = useState(0)
  
  return (
    <View style={styles.container}>

      <StatusBar style="light" backgroundColor="purple"/>

      <Text style={{ alignItems: "center", padding: 50, }}>CMS Teste #4</Text>
      
      <Button title="Click me" onPress={() => setCount(count + 1)} />

      <TouchableHighlight style={{ alignItems: "center", backgroundColor: 'purple', padding: 10, }} onPress={() => setCount(count + 1)}>
        <Text style={{ color: 'white', fontSize: 16 }}>Click me</Text>
      </TouchableHighlight>

      <TouchableOpacity style={{ alignItems: "center", backgroundColor: 'purple', padding: 10, }} onPress={() => setCount(count + 1)}>
        <Text style={{ color: 'white', fontSize: 16, }}>Click me</Text>
      </TouchableOpacity>

      <Text style={{ alignItems: "center",  padding: 10, }}>You clicked {count} times</Text>

    </View>
  )

}




import React, { Component, useState, useEffect, useRef,  } from 'react'
import { FlatList, TextInput, StyleSheet, View, Animated, SafeAreaView, ScrollView, Text, Button, Vibration, Platform, TouchableOpacity, ActivityIndicator, TouchableHighlight, Image, Alert, Dimensions, } from 'react-native'
import { LogBox } from 'react-native'
import { StatusBar } from 'expo-status-bar'
import Constants from 'expo-constants'
//import { RecyclerListView, DataProvider, LayoutProvider, BaseItemAnimator, } from 'recyclerlistview'
// import Icon from 'react-native-vector-icons/FontAwesome'
// import Feather from 'react-native-vector-icons/Feather'
// import Ionicons from 'react-native-vector-icons/Ionicons'
// import Fontisto from 'react-native-vector-icons/Feather'
// import { Ionicons, Feather, Feather, Fontisto, MaterialCommunityIcons, } from '@expo/vector-icons'
// import { LinearGradient, Fontisto } from 'expo-linear-gradient'
//import { AnimatedCircularProgress } from 'react-native-circular-progress'

LogBox.ignoreLogs(['Warning: ...'])
LogBox.ignoreAllLogs(true)
const { height, width } = Dimensions.get('window')

export default class App extends React.PureComponent {

   constructor(props) {
    super(props)  
     this.state = {}
   }

  componentDidMount() {
  }
  
  render() {
    return (
      <SafeAreaView style={styles.container}>
        <StatusBar style="light" backgroundColor="purple"/>
        <Text>CMS Teste #2</Text>
      </SafeAreaView>
    )
  }

}

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: '#fff', alignItems: 'center', justifyContent: 'center', alignContent: 'center', paddingTop: Constants.statusBarHeight, padding: 8, },
})





---------------------------------------------------------
---------------------------------------------------------